"0","pref_fig <- pref_df %>%"
"0","  mutate(experiment_condition = ifelse(experiment_condition == ""bin4_vs_bin0"", ""Unhelpful"", ""Random""),"
"0","         experiment_condition = factor(experiment_condition, levels = c(""Random"", ""Unhelpful""))) %>% "
"0","  group_by(experiment_condition, prediction_type_simplified, stimulus) %>% "
"0","  summarise(perf = mean(chose_bin4), familiarity = mean(frac_familiar)) %>% "
"0","  ggplot(aes(y = perf, x = experiment_condition, fill = experiment_condition)) +"
"0","  geom_violin() +"
"0","  geom_hline(aes(yintercept=0.5), color=""gray30"", linetype=""dashed"", size=2) +"
"0","  geom_point(size=3, position = position_dodge2(width=.15), alpha =0.5, show.legend = FALSE) +"
"0","  stat_summary(fun.data = ""mean_cl_boot"", size = 4, fatten = 1.5, show.legend = FALSE) +"
"0","  scale_fill_manual(values = c(""orange1"", ""darkorange3"")) +"
"0","  labs(y = ""P(choosing helpful examples)"", x = """") +"
"0","  ggtitle(""A"") +"
"0","  ylim(0, 1) +"
"0","  theme_minimal() +"
"0","  theme(text = element_text(size=30, family = font_style), axis.text.x = element_blank(), axis.title.y = element_text(size=30, family = font_style),"
"0","        plot.title = element_text(size=title_size, family = font_style), legend.position = ""bottom"", legend.title=element_blank(),"
"0","        legend.text = element_text(size=30, family = font_style),"
"0","        legend.spacing.x = unit(2, 'cm'))"
"2","`summarise()` has grouped output by 'experiment_condition', 'prediction_type_simplified'. You can override using the `.groups` argument.
"
"0","pref_fig"
