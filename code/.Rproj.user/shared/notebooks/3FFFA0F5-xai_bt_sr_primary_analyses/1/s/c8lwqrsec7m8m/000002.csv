"0","examples_match_ai <- df %>%"
"0","  filter(examples_condition == ""examples"") %>% "
"0","  mutate(teaching_condition = factor(teaching_condition, levels = c(""random"", ""helpful""))) %>% "
"0","  ggplot(aes(x =teaching_condition, y = correct_response, color = prediction_type== ""true_positive"" , group = prediction_type== ""true_positive"")) +"
"0","  stat_summary(fun.data = ""mean_cl_boot"", size=point_size, fatten = fat) +"
"0","  stat_summary(fun = ""mean"", geom = ""line"", size=line_size, fatten = fat) +"
"0","  scale_color_manual(breaks = c(TRUE, FALSE), values =c(""seagreen4"", ""seagreen1""), labels = c(""Model hit"", ""Model error""), name="""") +"
"0","  ylab(""Fidelity"") +"
"0","  xlab("""") +"
"0","  scale_x_discrete(labels = c(""[RANDOM]"", ""[HELPFUL]""))+"
"0","  ylim(0,1) +"
"0","  theme_minimal() +"
"0","  guides(color = guide_legend(nrow = 1)) +"
"0","  ggtitle(""C"") +"
"0","  theme(text = element_text(size=text_size, family = font_style),"
"0","    axis.title.y = element_text(size=ylab_size, family = 30),"
"0","    axis.text.y = element_text(family = font_style, size = 25),"
"0","    axis.text.x = element_text(family = font_style, size = 25),"
"0","    plot.title = element_text(size=title_size, family = font_style, vjust = 0),"
"0","    legend.position=""None"")"
"2","Ignoring unknown parameters: fatten"
"0","examples_match_ai"
